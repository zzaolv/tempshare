# ---- Stage 1: Build ----
FROM golang:1.24-alpine AS builder

WORKDIR /app

# 复制 go.mod 和 go.sum 并下载依赖，以利用 Docker 的层缓存
COPY backend/go.mod backend/go.sum ./
RUN go mod download

# 复制整个后端代码
COPY backend/ ./

# 构建一个静态链接的可执行文件
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s" -o /tempshare-backend .


# ---- Stage 2: Final Image ----
FROM alpine:latest

# 添加 ca-certificates 以支持 HTTPS/TLS 连接 (例如连接到 S3 或 WebDAV)
RUN apk --no-cache add ca-certificates

WORKDIR /app

# 从 builder 阶段复制编译好的二进制文件
COPY --from=builder /tempshare-backend /app/tempshare-backend

# 暴露后端服务端口
EXPOSE 8080

# 容器启动时运行的命令
CMD ["/app/tempshare-backend"]